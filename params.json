{"name":"Home-brains","tagline":"Smart things for my RaspberryPi-powered home","body":"home-brains\r\n===========\r\n\r\nSmart things for my RaspberryPi-powered home.\r\n\r\n\r\n\r\nBasic idea: create a virtual circuit of Sources, Pipes ans Sinks, e.g.\r\n\r\n    WebSource (reading a weather forecast xml each hour)\r\n    |\r\n    +-- XpathPipe (extracting rain info from the XML)\r\n        |\r\n        +-- GpioSink (blinking blue LED connected to GPIO if I should take my umbrella)\r\n\r\nLogical elements and variables inspired by EPICS system, but I want more lightweight\r\nsolution in pure Python.\r\n\r\n\r\n\r\nAll logical circuit elements are called Variables and can be of three major types:\r\n\r\n  + Source (periodical / triggered)\r\n    * WebSource (fetches data from the web)\r\n    * GpioSource (checks RaspberryPi GPIO pin input high/low state)\r\n    * ShellSource (runs shell command, e.g. 'cat /proc/cpuinfo | grep MHz')\r\n\r\n\r\n  + Pipe (has multiple Sources or other Pipes as inputs)\r\n    * ExpressionPipe (evaluates arbitrary expression like \"%1 > %2\" over its inputs)\r\n    * XpathPipe (extracts its value from given XML/HTML)\r\n\r\n\r\n  + Sink (is actually a Pipe with one input and some physical side-efects)\r\n    * GpioSink (sets RaspberryPi GPIO pins to blink leds, sound alarms, etc)\r\n    * EmailSink\r\n    * SmsSink (sends me an SMS over a connected 3G modem)\r\n    * SpeechSink (uses some text-to-speech)\r\n\r\n\r\nTODO (next):\r\n  + composite variables\r\n  + expression_pipe","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}